version: "3"
services:
  front:
    image: node:14.15.4-buster-slim
    container_name: front-container
    hostname: front-container
    volumes:
      - ./front:/usr/src
      - front_modules:/usr/src/node_modules #node_modulesはコンテナ内部で用意します
    working_dir: "/usr/src"
    command: sh -c "yarn install && yarn start"
    ports:
      - "4000:4000"
    # networks:
    #   - specific-site-observer
    # network_mode: host
  api:
    image: node:14.15.4-buster-slim
    container_name: api-container
    hostname: api-container
    volumes:
      - ./api/:/usr/src/
      - api_modules:/usr/src/node_modules #node_modulesはコンテナ内部で用意します
    working_dir: "/usr/src"
    ports:
      - "3000:3000"
    environment:
      - TZ=Asia/Tokyo
    command: sh -c "yarn install && yarn start"
    depends_on:
      - db
    # networks:
    #   - specific-site-observer
    # network_mode: host
  db:
    image: mysql:8
    container_name: db-container
    ports:
      - "5432:5432"
    environment:
      MYSQL_ROOT_PASSWORD: docker
      # MYSQL_DATABASE: mydb
      # MYSQL_USER: docker
      # MYSQL_PASSWORD: docker
      TZ: "Asia/Tokyo"
    volumes:
      - ./db/data:/var/lib/mysql
      - ./db/sql:/docker-entrypoint-initdb.d
      # - ./db/my.cnf:/etc/mysql/conf.d/my.cnf
      # - ./db/init-mysql.sh:/init-mysql.sh
    # command: sh -c "mysqld --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci && ./init-mysql.sh"
    # networks:
    #   - specific-site-observer
    # network_mode: host
volumes:
  front_modules:
  api_modules:
# networks:
#   specific-site-observer:
#     driver: host
